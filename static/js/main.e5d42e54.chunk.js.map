{"version":3,"sources":["Item.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","deleteItem","editItem","children","elementId","useState","editable","setEditable","value","setValue","toggleEditable","prevState","handleSubmit","e","preventDefault","output","onSubmit","onChange","target","handleChange","type","onClick","App","list","setList","title","id","item","setItem","error","setError","useEffect","oldList","JSON","parse","localStorage","getItem","stringify","elementID","newList","filter","console","log","newValue","findIndex","element","className","length","placeholder","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5d42e54.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\nconst Item = ({ deleteItem, editItem, children, elementId }) => {\r\n    const [editable, setEditable] = useState(false);\r\n    const [value, setValue] = useState(children);\r\n\r\n    const toggleEditable = () => {\r\n        setEditable(prevState => !prevState);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editItem(elementId, value);\r\n        toggleEditable();\r\n    }\r\n    const handleChange = ({ target: { value } }) => {\r\n        setValue(value);\r\n    }\r\n\r\n\r\n    let output = null;\r\n    if (editable) {\r\n        output = (\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <input value={value} onChange={(e) => handleChange(e)} type = \"string\"/>\r\n                <input type=\"submit\" value=\"edit\" onClick={handleSubmit} />\r\n            </form>\r\n        )\r\n    }\r\n    else {\r\n        output = (\r\n            <>\r\n                <span>{children}</span>\r\n                <span>\r\n                    <button onClick={toggleEditable}><FaEdit /></button>\r\n                    <button onClick={() => deleteItem(elementId)}><FaTrash /></button>\r\n                </span>\r\n\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <li>\r\n            {output}\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Item;","import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Element from \"./Item\";\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [item, setItem] = useState({ title: \"\", id: 0 });\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    let oldList = JSON.parse(localStorage.getItem(\"list\"));\n    if (oldList) {\n      setList(oldList);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list])\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"inside the if statment\" , item)\n    if (item.title) {\n      let newList = [...list, item];\n      setList(newList);\n      setItem({title : \"\" , id : list.length+1});\n    }\n    else {\n      setError(\"Please enter a value\");\n    }\n  }\n\n\n  // handleChange\n  const handleChange = (title) => {\n    if (error){\n      setError(prevState => !prevState);\n    }\n    setItem(prevState => {\n      return {\n        ...prevState,\n        title: title,\n      }\n    })\n  }\n\n\n  // delete\n  const deleteItem = (elementID) => {\n    let newList = list.filter((item) => item.id !== elementID);\n    console.log(\"the new list\" , newList);\n    setList(newList);\n  }\n\n\n  // the edit \n  const editItem = (id, newValue) => {\n    let newList = [...list];\n    let index = list.findIndex((element) => element.id === id);\n    newList[index].title = newValue;\n    setList(newList);\n  }\n\n  const deleteList = ()=>{\n    setList([]);\n  }\n\n  return (\n    <main className=\"Container\">\n      <form onSubmit={(e) => handleSubmit(e)}>\n        {error && <p className = \"Error\">{error}</p>}\n        <h1 className = \"Heading\">Grocery Bud</h1>\n        <input onChange={(e) => handleChange(e.target.value)} value={item.title} type=\"string\" placeholder=\"e.g egg\" />   \n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      {/* The List  */}\n      <section>\n        <ul>\n          {list.map(({ id, title }) => {\n            return (\n              <Element key={id} elementId={id} deleteItem={deleteItem} editItem={editItem}>{title}</Element>\n            )\n          })}\n        </ul>\n        {list.length ? <button onClick = {deleteList} className = \"ClearBtn\"> Clear All Items </button> : null}\n      </section>\n    </main>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}